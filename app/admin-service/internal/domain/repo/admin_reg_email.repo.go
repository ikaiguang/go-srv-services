// Package repos
// Code generated by ikaiguang. <https://github.com/ikaiguang>
package repos

import (
	context "context"
	gormutil "github.com/ikaiguang/go-srv-kit/data/gorm"

	entities "github.com/ikaiguang/go-srv-services/app/admin-service/internal/domain/entity"
)

// AdminRegEmailRepo repo
type AdminRegEmailRepo interface {
	Create(ctx context.Context, dataModel *entities.AdminRegEmail) error
	ExistCreate(ctx context.Context, dataModel *entities.AdminRegEmail) (anotherModel *entities.AdminRegEmail, isNotFound bool, err error)
	CreateInBatches(ctx context.Context, dataModels []*entities.AdminRegEmail, batchSize int) error
	Insert(ctx context.Context, dataModels []*entities.AdminRegEmail) error
	Update(ctx context.Context, dataModel *entities.AdminRegEmail) error
	ExistUpdate(ctx context.Context, dataModel *entities.AdminRegEmail) (anotherModel *entities.AdminRegEmail, isNotFound bool, err error)
	QueryOneById(ctx context.Context, id interface{}) (dataModel *entities.AdminRegEmail, isNotFound bool, err error)
	QueryOneByAdminEmail(ctx context.Context, adminEmail string) (dataModel *entities.AdminRegEmail, isNotFound bool, err error)
	QueryOneByConditions(ctx context.Context, conditions map[string]interface{}) (dataModel *entities.AdminRegEmail, isNotFound bool, err error)
	QueryAllByConditions(ctx context.Context, conditions map[string]interface{}) (dataModels []*entities.AdminRegEmail, err error)
	List(ctx context.Context, conditions map[string]interface{}, paginatorArgs *gormutil.PaginatorArgs) (dataModels []*entities.AdminRegEmail, totalNumber int64, err error)
	Delete(ctx context.Context, dataModel *entities.AdminRegEmail) error
	DeleteByIds(ctx context.Context, ids interface{}) error
}
